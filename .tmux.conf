set-option -g xterm-keys on
set-window-option -g xterm-keys on
# set-option -g default-terminal "xterm-256color"
set -s escape-time 10
set -sg repeat-time 600
set -s focus-events on
setw -q -g utf8 on
set -g history-limit 5000
set -g renumber-windows on
setw -g automatic-rename on
set -g set-titles on
set -g monitor-activity on
set -g visual-activity off
set-option -g mouse on
set-window-option -g mode-keys vi
set-hook -a window-linked 'set remain-on-exit on'
set-hook -a window-linked 'set mode-keys vi'
# set-option -g pane-active-border-style none
set-option -g detach-on-destroy off
set-option -g display-time 36000000
bind-key c new-window -c "#{pane_current_path}"
set-option -g base-index 1
set-window-option -g pane-base-index 1

## Keybindings

bind-key q confirm-before kill-session
# bind -n Pageup "copy-mode -u; send-keys Pageup"

## Status bar

# The following code is adapted from:
# https://coderwall.com/p/trgyrq/make-your-tmux-status-bar-responsive
# It provides the same appearance as https://github.com/powerline/powerline,
# but sidesteps the environment/configuration hell which that project
# introduces.

# Format to display on the left-hand side of the status bar.
# Note that the conditional #{?cond,true,false} operator does not do any
# fancy parsing, so you can't have literal commas in the conditions --
# this will cause the conditions to be split up. So we have to use multiple
# style #[attr=value] directives.
# set-option -g status-left '\
# #{?client_prefix,\
# #[fg=colour254]#[bg=colour31],\
# #[fg=colour16]#[bg=colour254]#[bold]}\
#  #{=80:session_name}\
#  #{?client_prefix,\
# #[fg=colour31],\
# #[fg=colour254]}\
# #[bg=colour234,nobold] '

# Maximum length of the format displayed on the left-hand side.
# Since the maximum length of the session name is limited in the above
# format string, this number is unimportant -- it just needs to be a
# bit larger than what is allocated for the session name, to allow for
# the surrounding characters.
# set-option -g status-left-length 90

# Format to display on the right-hand side of the status bar.
# set-option -g status-right ''

# Format to display for the current window.
# set-option -g window-status-current-format "\
# #[fg=colour117,bg=colour31] #{window_index}#{window_flags} \
# #[fg=colour231,bold]#{window_name} #[fg=colour31,bg=colour234,nobold] "

# Format to display for other windows.
# set-option -g window-status-format "\
# #[fg=colour244,bg=colour234]#{window_index}#{window_flags} \
# #[fg=colour249]#{window_name} "

# Background color for parts of the status bar not specified by the above
# formats. For instance, the empty space to the right, and the single
# spaces between instances of window-status-format.
# set-option -g status-bg colour234

# Inhibit the default styling for windows with unseen activity, which
# looks blatantly incorrect with the "powerline" theme we are trying to
# emulate.
# set-window-option -g window-status-activity-style none
# set-window-option -g window-status-activity-style none

# Update the status bar every second, instead of the default 15(!)
# seconds. It doesn't look like it's possible to update more than
# once per second, unfortunately.
set-option -g status-interval 1
